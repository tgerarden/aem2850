[{"authors":["todd"],"categories":null,"content":"I am an Assistant Professor at Cornell University in the Dyson School of Applied Economics and Management. My research interests are in energy and environmental economics, public economics, and industrial organization.\nI hold a Ph.D. in Public Policy from Harvard University and a B.S. in Mechanical Engineering from the University of Virginia.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"e567a46a4203ed291cab1a8af6888b80","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am an Assistant Professor at Cornell University in the Dyson School of Applied Economics and Management. My research interests are in energy and environmental economics, public economics, and industrial organization.","tags":null,"title":"","type":"authors"},{"authors":null,"categories":null,"content":"I will use this page to share extra resources and guides related to R, data, visualization, and other relevant topics. Enjoy!\n","date":1651190400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1651190400,"objectID":"a81a60ec3e9e0765584d3c8bbb4959d7","permalink":"https://aem2850.toddgerarden.com/resource/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/","section":"resource","summary":"I will use this page to share extra resources and guides related to R, data, visualization, and other relevant topics. Enjoy!","tags":null,"title":"Helpful resources","type":"docs"},{"authors":null,"categories":null,"content":"You will get the most of out this class if you:\n Engage with the readings and lecture materials Regularly use R  Each type of assignment in this class helps with one of these strategies.\nHomeworks Each week in class we will learn about how to do specific tasks in R. However, without practicing these principles and making graphics on your own, you won’t remember what you learn.\nTo practice, you will complete a brief set of exercises each week. These exercises will have about 8 short questions that are directly related to the topic for the week. You need to show that you made a good faith effort to work through each question. There may also be a final question which requires significantly more thought and work. This will be where you get to show some creativity and stretch your abilities.\nYou may work together on the homework assignments, but you must turn in your own answers. The default method will be to write these using Quarto, knit the completed homework to a PDF document, and submit the resulting PDF file via canvas.\nPrelims We will have 2 in-class prelims throughout the semester. Tentative dates for the in-class prelims are listed on the schedule. Note: these dates subject to change. More information will be provided later.\nGroup project To give you practice with the data and design principles you’ll learn in this class, you will complete a project in which you apply what you have learned to real-world data. These will be group projects. More details will be provided later.\nClass participation Class participation and regular attendance is expected. Excessive absences and failure to complete weekly in-class examples will impact your final grade. There is no penalty for the first three absences (except for the in-class prelims, which are mandatory). If you miss class, you are still expected to complete the in-class examples for any classes that you miss. You do not need to notify the instructor that you will miss class unless you anticipate missing more than three classes.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"15156c0ce792ef8800e368093ca4a0dc","permalink":"https://aem2850.toddgerarden.com/assignment/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/assignment/","section":"assignment","summary":"You will get the most of out this class if you:\n Engage with the readings and lecture materials Regularly use R  Each type of assignment in this class helps with one of these strategies.","tags":null,"title":"Assignment overview","type":"docs"},{"authors":null,"categories":null,"content":"This section contains the content generally covered on Thursdays, including links to R code that you can use as a reference for creating your own work. In the Content section, you sequentially build up your understanding of R programming; here you can see how all the pieces work together.\nExamples contain material we will discuss and use to learn R in class. These notes are not comprehensive. Instead, they are meant as a helpful resource during and after class in case you are confused or have trouble remembering something we discussed.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"433d5129a667ddc5fb439ec172a8745c","permalink":"https://aem2850.toddgerarden.com/example/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/example/","section":"example","summary":"This section contains the content generally covered on Thursdays, including links to R code that you can use as a reference for creating your own work. In the Content section, you sequentially build up your understanding of R programming; here you can see how all the pieces work together.","tags":null,"title":"Code examples","type":"docs"},{"authors":null,"categories":null,"content":"Readings Each week we will have a set of readings that you should ideally complete before coming to lecture and working through the examples and homework assignments for each topic.\nGuiding questions Each topic includes a set of questions to help guide your reading.\nSlides The lecture slides are HTML files made with the R package xaringan. On each class session page you’ll see buttons for opening the presentation in a new browser tab or for downloading a PDF of the slides in case you want to print them or store them on your computer.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"d5be68294f12f9cfecf81ad87009adc6","permalink":"https://aem2850.toddgerarden.com/content/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/content/","section":"content","summary":"Readings Each week we will have a set of readings that you should ideally complete before coming to lecture and working through the examples and homework assignments for each topic.","tags":null,"title":"Content overview","type":"docs"},{"authors":null,"categories":null,"content":"You will do all of your work in this class with the open source (and free!) programming language R. You will use RStudio as the main program to access R. Think of R as an engine and RStudio as a car dashboard—R handles all the calculations and the actual statistics, while RStudio provides a nice interface for running R code.\nPosit Cloud R is free, but it can sometimes be a pain to install and configure. To make life easier, this course uses posit.cloud, which lets you run a full instance of RStudio in your web browser. This means you won’t have to install anything on your computer to get started with R! We have a shared class workspace on Posit Cloud that will let you quickly copy templates for examples and homework assignments.\nGo to http://posit.cloud/ and create an account. You’ll receive a link to join the shared class workspace separately. If you don’t get this link, let me know and I will invite you.\nRStudio on your computer Posit Cloud is convenient, but it can be slow and it is not designed to be able to handle larger datasets, more complicated analysis, or fancier graphics. Over the course of the semester, you might want to wean yourself off of Posit Cloud and install all these things locally. This will also be handy in the future if you want to use R for other classes, jobs, etc.\nHere are some links to get set up for this class:\nInstall R First you need to install R itself (the engine).\n  Go to the CRAN (Collective R Archive Network)1 website: https://cran.r-project.org/\n  Click on “Download R for XXX”, where XXX is your operating system:\n  If you use macOS, scroll down to the first .pkg file in the list of files (in this picture, it’s R-4.1.2.pkg) and download it.\n  If you use Windows, click “base” (or click on the bolded “install R for the first time” link) and download it.\n    Double click on the downloaded file (check your Downloads folder). Click yes through all the prompts to install like any other program.\n  If you use macOS, download and install XQuartz.2 You do not need to do this on Windows.\n  Install RStudio Next, you need to install RStudio (the dashboard). Once both R and RStudio are installed, you can ignore R and only use RStudio. RStudio will use R automatically and you won’t have to interact with R directly.\n  Go to the free download location on RStudio’s website: https://www.rstudio.com/products/rstudio/download/#download\n  The website should automatically detect your operating system (macOS or Windows) and show a big download button for it. For example:\nIf not, scroll down a little to the large table and choose the version of RStudio that matches your operating system.\n  Double click on the downloaded file (again, check your Downloads folder). Click yes through all the prompts to install like any other program.\n  Double click on RStudio to run it (check your applications folder or start menu).\nInstall tidyverse R packages are easy to install with RStudio. There are multiple ways to do it. Here are two ways to install the tidyverse and all its dependencies from CRAN:\n Within RStudio, enter install.packages(\u0026#34;tidyverse\u0026#34;) in the R console.  Select the packages panel, click on “Install,” type the name of the package you want to install, and press enter.  You’ll see a bunch of output in the RStudio console as all the tidyverse packages and dependencies are installed. If you choose option 2, you might notice that RStudio implements your selection by generating the line of code install.packages(\u0026#34;tidyverse\u0026#34;) and entering it in the console.\nYou can use either of these methods to install additional packages for your work. Packages just need to be installed once per device (and then loaded each time you want to use them).\nInstall rmarkdown Follow your preferred procedure from above to install rmarkdown.\nInstall tinytex Note: If you already have a LaTeX distribution installed on your device, you can skip this step.\nWhen you knit to PDF, R uses a special scientific typesetting program named LaTeX (pronounced “lay-tek”; for goofy nerdy reasons, the x is technically the “ch” sound in “Bach”, but most people just say it as “k”).\nLaTeX is neat and makes pretty documents, but it’s a huge program—the macOS version, for instance, is over 4 GB! To make life easier, there’s an R package named TinyTeX that installs a minimal LaTeX program and that automatically deals with differences between macOS and Windows.\nHere’s how to install tinytex so you can knit to pretty PDFs:\n Use the Packages in panel in RStudio to install tinytex like you did above with tidyverse. Alternatively, run install.packages(\u0026#34;tinytex\u0026#34;) in the console. Run tinytex::install_tinytex() in the console. Wait for a bit while R downloads and installs everything you need. The end! You should now be able to knit to PDF.  Reminder: come to office hours if you need help with this! Downloading Posit Cloud projects If you want to use your local installation of R to complete assignments, all you need to do is navigate to the class workspace on …","date":1643068800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1643068800,"objectID":"befdcf3e47586b0175add1c7563e82b8","permalink":"https://aem2850.toddgerarden.com/resource/install/","publishdate":"2022-01-25T00:00:00Z","relpermalink":"/resource/install/","section":"resource","summary":"You will do all of your work in this class with the open source (and free!) programming language R. You will use RStudio as the main program to access R. Think of R as an engine and RStudio as a car dashboard—R handles all the calculations and the actual statistics, while RStudio provides a nice interface for running R code.","tags":null,"title":"Installing R, RStudio, tidyverse, rmarkdown, and tinytex","type":"docs"},{"authors":null,"categories":null,"content":"R style conventions R is fairly forgiving about how you type code (unlike other languages like Python, where miscounting spaces can ruin your code!). All of these things will do exactly the same thing:\nmpg %\u0026gt;% filter(cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) mpg %\u0026gt;% filter(cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) mpg %\u0026gt;% filter(cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) mpg %\u0026gt;% filter(cty\u0026gt;10, class==\u0026#34;compact\u0026#34;) filter(mpg,cty\u0026gt;10,class==\u0026#34;compact\u0026#34;) mpg %\u0026gt;% filter(cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) filter ( mpg,cty\u0026gt;10, class==\u0026#34;compact\u0026#34; )  But you’ll notice that only a few of those iterations (the first three) are easily readable.\nTo help improve readability and make it easier to share code with others, there’s an unofficial style guide for writing R code. It’s fairly short and just has lots of examples of good and bad ways of writing code (naming variables, dealing with long lines, using proper indentation levels, etc.)—you should glance through it some time.\nRStudio has a built-in way of cleaning up your code. Select some code, press ctrl + i (on Windows) or ⌘ + i (on macOS), and R will reformat the code for you. It’s not always perfect, but it’s really helpful for getting indentation right without having to manually hit space a billion times.\nMain style things to pay attention to for this class  Note: We won’t grade you on this! If you submit something like filter(mpg,cty\u0026gt;10,class==\u0026#34;compact\u0026#34;), we might recommend adding spaces, but we won’t take points off.\n Spacing  See the “Spacing” section in the tidyverse style guide.\n Put spaces after commas (like in regular English):\n# Good filter(mpg, cty \u0026gt; 10) # Bad filter(mpg,cty \u0026gt; 10) filter(mpg ,cty \u0026gt; 10) filter(mpg , cty \u0026gt; 10)  Put spaces around operators like +, -, \u0026gt;, =, etc.:\n# Good filter(mpg, cty \u0026gt; 10) # Bad filter(mpg, cty\u0026gt;10) filter(mpg, cty\u0026gt; 10) filter(mpg, cty \u0026gt;10)  Don’t put spaces around parentheses that are parts of functions:\n# Good filter(mpg, cty \u0026gt; 10) # Bad filter (mpg, cty \u0026gt; 10) filter ( mpg, cty \u0026gt; 10) filter( mpg, cty \u0026gt; 10 )  Long lines  See the “Long lines” section in the tidyverse style guide.\n It’s good practice to make sure your lines of code don’t get too long. A good suggestion is to keep lines at a maximum of 80 characters. Instead of counting characters by hand (🥴), in RStudio go to “Tools” \u0026gt; “Global Options” \u0026gt; “Code” \u0026gt; “Display” and check the box for “Show margin.” You should now see a really thin line indicating 80 characters. Again, you can go beyond this—that’s fine. It’s just good practice to avoid going too far past it.\nYou can add line breaks inside longer lines of code. Line breaks should come after commas, and things like function arguments should align within the function:\n# Good filter(mpg, cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) # Good filter(mpg, cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) # Good filter(mpg, cty \u0026gt; 10, class == \u0026#34;compact\u0026#34;) # Bad filter(mpg, cty \u0026gt; 10, class %in% c(\u0026#34;compact\u0026#34;, \u0026#34;pickup\u0026#34;, \u0026#34;midsize\u0026#34;, \u0026#34;subcompact\u0026#34;, \u0026#34;suv\u0026#34;, \u0026#34;2seater\u0026#34;, \u0026#34;minivan\u0026#34;)) # Good filter(mpg, cty \u0026gt; 10, class %in% c(\u0026#34;compact\u0026#34;, \u0026#34;pickup\u0026#34;, \u0026#34;midsize\u0026#34;, \u0026#34;subcompact\u0026#34;, \u0026#34;suv\u0026#34;, \u0026#34;2seater\u0026#34;, \u0026#34;minivan\u0026#34;))  Pipes (%\u0026gt;%) and ggplot layers (+) Put each step in a dplyr pipeline on separate lines, with the %\u0026gt;% at the end of the line, indented with two spaces:\n# Good mpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% group_by(class) %\u0026gt;% summarize(avg_hwy = mean(hwy)) # Bad mpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% group_by(class) %\u0026gt;% summarize(avg_hwy = mean(hwy)) # Super bad mpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% group_by(class) %\u0026gt;% summarize(avg_hwy = mean(hwy)) # Super bad and won\u0026#39;t even work mpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% group_by(class) %\u0026gt;% summarize(avg_hwy = mean(hwy))  Put each layer of a ggplot plot on separate lines, with the + at the end of the line, indented with two spaces:\n# Good ggplot(mpg, aes(x = cty, y = hwy, color = class)) + geom_point() + geom_smooth() + theme_bw() # Bad ggplot(mpg, aes(x = cty, y = hwy, color = class)) + geom_point() + geom_smooth() + theme_bw() # Super bad ggplot(mpg, aes(x = cty, y = hwy, color = class)) + geom_point() + geom_smooth() + theme_bw() # Super bad and won\u0026#39;t even work ggplot(mpg, aes(x = cty, y = hwy, color = class)) + geom_point() + geom_smooth() + theme_bw()  Comments  See the “Comments” section in the tidyverse style guide.\n Comments should start with a comment symbol and a single space: # \n# Good #Bad #Bad  If the comment is really short (and won’t cause you to go over 80 characters in the line), you can include it in the same line as the code:\nmpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% # Only rows where cty is 10 + group_by(class) %\u0026gt;% # Divide into class groups summarize(avg_hwy = mean(hwy)) # Find the average hwy in each group  You can add extra spaces to get inline comments to align, if you want:\nmpg %\u0026gt;% filter(cty \u0026gt; 10) %\u0026gt;% # Only rows where cty is 10 + group_by(class) %\u0026gt;% # Divide into class groups summarize(avg_hwy = mean(hwy)) # Find the average hwy in each group  If the comment is really long, you can break it into multiple lines. RStudio can do this for you if you go to “Code” \u0026gt; “Reflow comment”\n# Good # Happy families are all …","date":1643068800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1643068800,"objectID":"f4d124537f1a5dab4ac613d774163bcc","permalink":"https://aem2850.toddgerarden.com/resource/style/","publishdate":"2022-01-25T00:00:00Z","relpermalink":"/resource/style/","section":"resource","summary":"R style conventions R is fairly forgiving about how you type code (unlike other languages like Python, where miscounting spaces can ruin your code!). All of these things will do exactly the same thing:","tags":null,"title":"R style suggestions","type":"docs"},{"authors":null,"categories":null,"content":"There are a ton of places to find data related to business online. Here are some examples:\n  Kaggle: Kaggle hosts machine learning competitions. A byproduct of these competitions is a host of fascinating datasets that are generally free and open to the public. The datasets are sometimes accompanied with suggestions for how to analyze them. Here are a few examples:\n Chase Bank Branch Deposits, 2010–2016: Records for every branch of Chase Bank in the United States. This dataset is not quite tidy and will require a little bit of reshaping with gather() or pivot_longer(), since there are individual columns of deposits per year. Credit Card Approvals: a credit card dataset for prediction methods. Credit Card Fraud Detection: anonymous credit card transactions labeled as fraudulent or genuine. 515K Hotel Reviews Data in Europe: 515,000 customer reviews and scoring of 1,493 luxury hotels across Europe. Netflix Movies and TV Shows IBM HR Analytics Employee Attrition \u0026amp; Performance: simulated data created by IBM data scientists to model employee attrtition. And many, many more!    Quandl: Nasdaq Data Link provides some datasets related to finance and economics for free (though many require a paid subscription). The datasets are listed in this data catalog.\n  FRED: Economic Data from the St. Louis Fed.\n  Yahoo Finance\n There are many ways to access data from Yahoo Finance. One option is to scrape data. Another is to use a package like tidyquant to tq_get() quantative data in a tibble format. This package can also be used to get data from FRED, Quandl, and other sources.    Twitter: You could collect data on tweets that reference a specific company via the twitter API or by using a package like twitteR to access the API. Then you could use this on its own or in conjunction with some other data (e.g., stock prices/returns) to do an analysis of consumer sentiment, for example.\n  Inside Airbnb: Inside Airbnb is a mission-driven activist project with the objective to provide data that quantifies the impact of short-term rentals on housing and residential communities, as well as create a platform to support advocacy for policies to protect our cities from the impacts of short-term rentals. The post data for many different cities. Please note these community guidelines:\n  Only take the data you need Do not scrape data from the site Only download the data once. Do not write scripts that download the data every time they are executed.     Yelp Open Dataset: A subset of Yelp businesses, reviews, and user data for use in personal, educational, and academic purposes.\n Note: the data are stored in JSON files and will require special steps to import into data structures we are familiar with (e.g., by using the package jsonlite). Feel free to come to office hours for help.    Taxi and Ridehailing Usage in New York City\n  Zillow Housing Data\n  Amazon Review Data\n Note: the data are stored in JSON files and will require special steps to import into data structures we are familiar with (e.g., by using the package jsonlite). Feel free to come to office hours for help. The same group provides a collection of dataset on many other platforms and topics here.    Bank Marketing Data: data on direct marketing campaigns and whether they succeeded in convincing customers to make a deposit.\n  Data from Intro to Statistical Learning: The ISLR package contains several interesting (if dated and or/simulated) datasets:\n ISLR::Caravan contains 5,822 real records on whether customers purchased a caravan insurance policy, along with product ownsership information and sociodemographic data based on their zip codes. ISLR::Default is a simulated dataset of 10,000 credit card customers that can be used to predict which customers will default on their credit card debt. ISLR::OJ contains 1,070 purchases of orange juice for two brands, along with customer and product characteristics (like prices) that could be used to study pricing strategies.    Data is Plural Newsletter: Jeremy Singer-Vine sends a weekly newsletter of the most interesting public datasets he’s found. He also has an archive of all the datasets he’s highlighted.\n  Google Dataset Search: Google indexes thousands of public datasets; search for them here.\n  ","date":1651190400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651190400,"objectID":"4f7a0bd244d83ed8be50bc605007613c","permalink":"https://aem2850.toddgerarden.com/resource/data/","publishdate":"2022-04-29T00:00:00Z","relpermalink":"/resource/data/","section":"resource","summary":"There are a ton of places to find data related to business online. Here are some examples:\n  Kaggle: Kaggle hosts machine learning competitions. A byproduct of these competitions is a host of fascinating datasets that are generally free and open to the public.","tags":null,"title":"Data","type":"docs"},{"authors":null,"categories":null,"content":"Data source Climate Data Online https://www.ncei.noaa.gov/cdo-web/\nSearch tool \u0026gt; Daily Summaries \u0026gt; Select Date Range [January] \u0026gt; Search for [States] \u0026gt; Enter a Search Term [New York] \u0026gt; click on New York \u0026gt; Add to Cart \u0026gt; Select the Output Format [Custom GHCN-Daily CSV] \u0026gt; Continue \u0026gt; Select [Nothing – do not include Station Name] \u0026gt; Select [Precipitation] \u0026gt; Select [Air Temperature] \u0026gt; Continue \u0026gt; Enter email address \u0026gt; Continue\nNote: after downloading, station names were manually removed, and excel converted the date formatting, so code was modified to work with those data rather than the raw data.\nNeed to fetch data from current and past year each time I prep the course (since past year data will be incomplete).\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"0ee693147a9ffa5d5c77a3dba6d49fb3","permalink":"https://aem2850.toddgerarden.com/slides/data/01-slides/readme/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/data/01-slides/readme/","section":"slides","summary":"Data source Climate Data Online https://www.ncei.noaa.gov/cdo-web/\nSearch tool \u003e Daily Summaries \u003e Select Date Range [January] \u003e Search for [States] \u003e Enter a Search Term [New York] \u003e click on New York \u003e Add to Cart \u003e Select the Output Format [Custom GHCN-Daily CSV] \u003e Continue \u003e Select [Nothing – do not include Station Name] \u003e Select [Precipitation] \u003e Select [Air Temperature] \u003e Continue \u003e Enter email address \u003e Continue","tags":null,"title":"","type":"slides"}]