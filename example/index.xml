<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code examples | R for Business Analytics</title><link>https://aem2850.toddgerarden.com/example/</link><atom:link href="https://aem2850.toddgerarden.com/example/index.xml" rel="self" type="application/rss+xml"/><description>Code examples</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 06 Oct 2025 21:31:48 +0000</lastBuildDate><image><url>https://aem2850.toddgerarden.com/media/icon_hua5466350784c0319d6bf17c8623ebf4f_44852_512x512_fill_lanczos_center_3.png</url><title>Code examples</title><link>https://aem2850.toddgerarden.com/example/</link></image><item><title>Mapping data to graphics, amounts, and proportions</title><link>https://aem2850.toddgerarden.com/example/07-example/</link><pubDate>Mon, 06 Oct 2025 21:31:48 +0000</pubDate><guid>https://aem2850.toddgerarden.com/example/07-example/</guid><description>&lt;h2 id="plan-for-today">Plan for today&lt;/h2>
&lt;ul>
&lt;li>Questions? 🙋‍♀️&lt;/li>
&lt;li>Tuesday:
&lt;ul>
&lt;li>Go through &lt;a href="https://aem2850.toddgerarden.com/content/07-content/">slides&lt;/a>&lt;/li>
&lt;li>Open the &lt;a href="http://posit.cloud" target="_blank" rel="noopener">posit.cloud&lt;/a> project &lt;code>example-07-1&lt;/code>&lt;/li>
&lt;li>Work through &lt;code>amounts-practice.R&lt;/code>&lt;/li>
&lt;li>Time permitting: &lt;code>optional-mapping-data-to-graphics-practice.R&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Thursday:
&lt;ul>
&lt;li>Go through &lt;a href="https://aem2850.toddgerarden.com/content/07-content/">slides&lt;/a>&lt;/li>
&lt;li>Open the &lt;a href="http://posit.cloud" target="_blank" rel="noopener">posit.cloud&lt;/a> project &lt;code>example-07-2&lt;/code>&lt;/li>
&lt;li>Work through &lt;code>proportions-practice.R&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Solutions&lt;/strong> will be posted after class&lt;/li>
&lt;/ul>
&lt;h2 id="cheatsheets">Cheatsheets&lt;/h2>
&lt;p>&lt;a href="https://rstudio.github.io/cheatsheets/data-visualization.pdf" target="_blank" rel="noopener">Click here to download the &lt;code>ggplot&lt;/code> cheatsheet&lt;/a>&lt;/p></description></item><item><title>Strings and regular expressions</title><link>https://aem2850.toddgerarden.com/example/05-example/</link><pubDate>Thu, 25 Sep 2025 09:35:55 +0000</pubDate><guid>https://aem2850.toddgerarden.com/example/05-example/</guid><description>&lt;h2 id="announcements">Announcements&lt;/h2>
&lt;h3 id="homework---week-5">Homework - Week 5&lt;/h3>
&lt;ul>
&lt;li>Will be due Monday at 11:59pm&lt;/li>
&lt;li>We continued to provide scaffolded code in &lt;code>homework-05.qmd&lt;/code>&lt;/li>
&lt;li>We also provided a version without scaffolded code, named &lt;code>homework-05-blank.qmd&lt;/code>
&lt;ul>
&lt;li>This file will Render without any edits, unlike &lt;code>homework-05.qmd&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Note:&lt;/strong> The last 1-2 questions are fairly involved. They are meant as an opportunity to practice, not a source of stress. For Prelim 1 on October 2, we will not ask you to write such long pieces of code from scratch. However, we may ask you to write short code snippets, or outline the key steps to approach a more complicated programming task conceptually (in words, not code), or both.&lt;/li>
&lt;/ul>
&lt;h3 id="prelim-1-overview">Prelim 1 overview&lt;/h3>
&lt;ul>
&lt;li>October 2 at 7:30pm in person in Warren Hall
&lt;ul>
&lt;li>Will post room assignments to canvas in advance&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Format: 75-minute paper exam, closed-book (-notes, -computer, etc.)&lt;/li>
&lt;li>It will emphasize both concepts and syntax&lt;/li>
&lt;li>We will have multiple question types, including but not limited to:
&lt;ol>
&lt;li>multiple choice&lt;/li>
&lt;li>short answer questions that stress concepts&lt;/li>
&lt;li>explain whether/why a code snippet we give you would run/fail&lt;/li>
&lt;li>tell us what some code would return&lt;/li>
&lt;li>explain how you approach a coding task conceptually&lt;/li>
&lt;li>name key functions we have learned&lt;/li>
&lt;li>write brief code snippets&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>We will post more information on canvas early next week&lt;/li>
&lt;/ul>
&lt;h3 id="prelim-1-preparation">Prelim 1 preparation&lt;/h3>
&lt;ul>
&lt;li>Complete the homework for this week
&lt;ul>
&lt;li>Attend regular Friday and Monday office hours as needed&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>We will offer practice questions early next week&lt;/li>
&lt;li>Come to class on Sep 30 for the review session&lt;/li>
&lt;li>Come to Prof. Gerarden&amp;rsquo;s office hours:
&lt;ul>
&lt;li>Tuesday, September 30 from 11:30 - 12:30&lt;/li>
&lt;li>Or &lt;a href="http://aem2850.youcanbook.me" target="_blank" rel="noopener">by appointment&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Optional: come to class on Oct 2 for TA office hours&lt;/li>
&lt;/ul>
&lt;h2 id="plan-for-today">Plan for today&lt;/h2>
&lt;ul>
&lt;li>Questions? 🙋‍♀️&lt;/li>
&lt;li>Navigate to &lt;a href="http://posit.cloud" target="_blank" rel="noopener">posit.cloud&lt;/a> and open the project &lt;code>example-05&lt;/code> in our course workspace&lt;/li>
&lt;li>Work through &lt;code>strings-practice.R&lt;/code> in &lt;code>example-05&lt;/code>&lt;/li>
&lt;li>&lt;strong>Solutions&lt;/strong> will be posted after class&lt;/li>
&lt;/ul>
&lt;h2 id="cheatsheets">Cheatsheets&lt;/h2>
&lt;p>&lt;a href="https://rstudio.github.io/cheatsheets/strings.pdf" target="_blank" rel="noopener">Click here to download the &lt;code>stringr&lt;/code> cheatsheet&lt;/a>&lt;/p></description></item><item><title>Joins and logic</title><link>https://aem2850.toddgerarden.com/example/04-example/</link><pubDate>Mon, 15 Sep 2025 15:29:46 +0000</pubDate><guid>https://aem2850.toddgerarden.com/example/04-example/</guid><description>&lt;h2 id="plan-for-today">Plan for today&lt;/h2>
&lt;ul>
&lt;li>Questions? 🙋‍♀️&lt;/li>
&lt;li>Navigate to &lt;a href="http://posit.cloud" target="_blank" rel="noopener">posit.cloud&lt;/a>&lt;/li>
&lt;li>Tuesday: work through &lt;code>joins-practice.R&lt;/code> in &lt;code>example-04-1&lt;/code>&lt;/li>
&lt;li>Thursday: work through &lt;code>logic-practice.R&lt;/code> in &lt;code>example-04-2&lt;/code>&lt;/li>
&lt;li>&lt;strong>Solutions&lt;/strong> will be posted after class&lt;/li>
&lt;/ul>
&lt;h2 id="cheatsheets">Cheatsheets&lt;/h2>
&lt;p>&lt;a href="https://rstudio.github.io/cheatsheets/data-transformation.pdf" target="_blank" rel="noopener">Click here to download the &lt;code>dplyr&lt;/code> cheatsheet&lt;/a>&lt;/p></description></item><item><title>Data import and tidying</title><link>https://aem2850.toddgerarden.com/example/03-example/</link><pubDate>Mon, 08 Sep 2025 15:52:10 +0000</pubDate><guid>https://aem2850.toddgerarden.com/example/03-example/</guid><description>&lt;h2 id="plan-for-today">Plan for today&lt;/h2>
&lt;ul>
&lt;li>Questions? 🙋‍♀️&lt;/li>
&lt;li>Tuesday:
&lt;ul>
&lt;li>Slides on data import&lt;/li>
&lt;li>Navigate to &lt;a href="http://posit.cloud" target="_blank" rel="noopener">posit.cloud&lt;/a> and open the project &lt;code>example-03-01&lt;/code> in our course workspace&lt;/li>
&lt;li>Work through &lt;code>import-data-practice.R&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Thursday:
&lt;ul>
&lt;li>Slides on tidy data&lt;/li>
&lt;li>Navigate to &lt;a href="http://posit.cloud" target="_blank" rel="noopener">posit.cloud&lt;/a> and open the project &lt;code>example-03-02&lt;/code> in our course workspace&lt;/li>
&lt;li>Work through &lt;code>tidy-data-practice.R&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Solutions&lt;/strong> will be posted after class&lt;/li>
&lt;/ul>
&lt;h2 id="cheatsheets">Cheatsheets&lt;/h2>
&lt;p>&lt;a href="https://rstudio.github.io/cheatsheets/data-import.pdf" target="_blank" rel="noopener">Click here to download the &lt;code>readr&lt;/code> cheatsheet&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://rstudio.github.io/cheatsheets/tidyr.pdf" target="_blank" rel="noopener">Click here to download the &lt;code>tidyr&lt;/code> cheatsheet&lt;/a>&lt;/p></description></item><item><title>Welcome to the tidyverse</title><link>https://aem2850.toddgerarden.com/example/02-example/</link><pubDate>Mon, 01 Sep 2025 15:26:19 +0000</pubDate><guid>https://aem2850.toddgerarden.com/example/02-example/</guid><description>&lt;h2 id="plan-for-this-weeks-example">Plan for this week&amp;rsquo;s example&lt;/h2>
&lt;ul>
&lt;li>Questions? 🙋‍♀️&lt;/li>
&lt;li>Navigate to &lt;a href="http://posit.cloud" target="_blank" rel="noopener">posit.cloud&lt;/a>&lt;/li>
&lt;li>Tuesday:
&lt;ul>
&lt;li>Review slides as a class&lt;/li>
&lt;li>Open the project &lt;code>example-02-1&lt;/code> in our course workspace&lt;/li>
&lt;li>Work through &lt;code>intro-tidyverse-practice.R&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Thursday:
&lt;ul>
&lt;li>Review slides as a class&lt;/li>
&lt;li>Open the project &lt;code>example-02-2&lt;/code> in our course workspace&lt;/li>
&lt;li>Work through &lt;code>data-wrangling-practice.R&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>We will explore data from &lt;a href="https://fivethirtyeight.com/features/the-economic-guide-to-picking-a-college-major/" target="_blank" rel="noopener">this FiveThirtyEight article&lt;/a>
&lt;!-- - On our own devices: 1. Getting Comfortable with Data Frames -->
&lt;!-- - As a group: discuss results, answer questions -->
&lt;!-- - On our own devices: 2. Using Functions in Packages -->
&lt;/li>
&lt;li>&lt;strong>Solutions&lt;/strong> will be posted after class&lt;/li>
&lt;/ul>
&lt;h2 id="cheatsheets">Cheatsheets&lt;/h2>
&lt;p>&lt;a href="https://rstudio.github.io/cheatsheets/data-transformation.pdf" target="_blank" rel="noopener">Click here to download the &lt;code>dplyr&lt;/code> cheatsheet&lt;/a>&lt;/p>
&lt;h2 id="tidyverse-version">tidyverse version&lt;/h2>
&lt;p>&lt;strong>Note:&lt;/strong> If you are working locally, make sure you are running at least &lt;strong>tidyverse&lt;/strong> 2.0.0:&lt;/p>
&lt;pre>&lt;code class="language-r"># packageVersion(&amp;quot;tidyverse&amp;quot;)
# install.packages(&amp;quot;tidyverse&amp;quot;) # install updated version if &amp;lt; 2.0.0
&lt;/code>&lt;/pre>
&lt;h2 id="installing-r-packages">Installing R packages&lt;/h2>
&lt;p>The functionality provided by a fresh install of R is only a small fraction of what is possible. In fact, we refer to what you get after your first install as &lt;em>base R&lt;/em>. To access additional functionality, we can use add-ons made by developers. There are currently hundreds of these available from CRAN and many others shared via other repositories such as GitHub. However, because not everybody needs all available functionality, R instead makes different components available via &lt;em>packages&lt;/em>. R makes it very easy to install packages from within R. For example, to install the &lt;strong>tidyverse&lt;/strong> package, which we will use throughout the semester, you would just enter the following command in the R Console:&lt;/p>
&lt;pre>&lt;code class="language-r">install.packages(&amp;quot;tidyverse&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>In RStudio, you can also do this by navigating to the &lt;em>Packages&lt;/em> pane or via the &lt;em>Tools&lt;/em> menu &amp;gt; Install Packages.&lt;/p>
&lt;p>After installation is complete, we can then load the package into our current R session using the &lt;code>library&lt;/code> function:&lt;/p>
&lt;pre>&lt;code class="language-r">library(tidyverse)
&lt;/code>&lt;/pre>
&lt;p>You only need to install a package once if you are working with a local installation of R. On RStudio Cloud, you may sometimes need to install packages within multiple projects, but I will usually do this for you in advance. After that, you can load it using &lt;code>library&lt;/code> whenever you need it. The package remains loaded until we quit the R session (or &lt;code>detach&lt;/code> the package).&lt;/p>
&lt;p>Note that installing &lt;strong>tidyverse&lt;/strong> actually installs a large number of packages. This commonly occurs when a package has &lt;em>dependencies&lt;/em>, or uses functions from other packages. When you load a package using &lt;code>library&lt;/code>, you also load its dependencies.&lt;/p>
&lt;p>You can see all the packages you have installed using the &lt;em>Packages&lt;/em> tab in RStudio or via the following function:&lt;/p>
&lt;pre>&lt;code class="language-r">installed.packages()
&lt;/code>&lt;/pre>
&lt;p>As we move through this course, we will learn more about packages and keep adding them to our toolbox.&lt;/p>
&lt;!-- **Note that in this course (at least, on most browsers), grey boxes are used to show R code typed into the R console. The symbol `##` is used to denote what the R console outputs.** --></description></item><item><title>Intro to R, RStudio, and Quarto</title><link>https://aem2850.toddgerarden.com/example/01-example/</link><pubDate>Wed, 27 Aug 2025 16:12:55 +0000</pubDate><guid>https://aem2850.toddgerarden.com/example/01-example/</guid><description>&lt;h1 id="introduction-to-examples">Introduction to Examples&lt;/h1>
&lt;p>Examples contain material we will discuss and use to learn R in class. These notes are &lt;em>not&lt;/em> comprehensive. Instead, they are meant as a helpful resource during and after class in case you are confused or have trouble remembering something we discussed.&lt;/p>
&lt;h2 id="plan-for-today">Plan for today&lt;/h2>
&lt;ul>
&lt;li>Questions? Concerns?&lt;/li>
&lt;li>Did anyone have trouble making an Posit Cloud account?
&lt;ul>
&lt;li>&lt;a href="https://posit.cloud/spaces/681882/join?access_code=gD8JoGqZsScG1LNGmA8g-k7me5LMfYoB1VLMSwI6" target="_blank" rel="noopener">Here is the link to join the course workspace if you haven&amp;rsquo;t already&lt;/a>&lt;/li>
&lt;li>&lt;strong>IMPORTANT NOTE:&lt;/strong> I and our TAs will be able to view your work. This is a feature but could also be a bug &amp;ndash; please don&amp;rsquo;t write or store anything in your course projects that you don&amp;rsquo;t want us to see. 😉&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Navigate to &lt;a href="http://posit.cloud" target="_blank" rel="noopener">posit.cloud&lt;/a> and open the project &lt;code>example-01&lt;/code> in our course workspace&lt;/li>
&lt;li>R, RStudio, Posit Cloud basics
&lt;ul>
&lt;li>overview on this site, then move to posit.cloud&lt;/li>
&lt;li>together: &lt;code>r-coding-intro.R&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>R Markdown / Quarto basics
&lt;ul>
&lt;li>overview on this site, then move to posit.cloud&lt;/li>
&lt;li>together: &lt;code>quarto-formatting-example.qmd&lt;/code>&lt;/li>
&lt;li>on your own: &lt;code>quarto-practice.qmd&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Time permitting: overview of some base R basics
&lt;ul>
&lt;li>&amp;ldquo;Introduction to base R&amp;rdquo; slides: &lt;a href="https://aem2850.toddgerarden.com/slides/01-slides.html">html&lt;/a> &lt;a href="https://aem2850.toddgerarden.com/slides/01-slides.pdf">PDF&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Feedback on class format welcome!&lt;/li>
&lt;/ul>
&lt;h2 id="cheatsheets">Cheatsheets&lt;/h2>
&lt;p>&lt;a href="https://rstudio.github.io/cheatsheets/rstudio-ide.pdf" target="_blank" rel="noopener">Click here to download the RStudio IDE cheatsheet&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://rstudio.github.io/cheatsheets/quarto.pdf" target="_blank" rel="noopener">Click here to download the Quarto cheatsheet&lt;/a>&lt;/p>
&lt;h2 id="getting-started">Getting started with R and RStudio&lt;/h2>
&lt;p>R is not a programming language like &lt;code>C&lt;/code> or &lt;code>Java&lt;/code>. It was not created by software engineers for software development. Instead, it was developed by statisticians as an interactive environment for data analysis. This interactivity makes it easy to explore data quickly, which is an indispensable feature for many tasks in business analytics, statistics, data science, and other fields.&lt;/p>
&lt;p>If you have prior programming experience, you may be surprised by differences between R and other programming languages.&lt;/p>
&lt;p>If you have no prior programming experience, you may initially be frustrated when learning R. That is normal! Learning to program is essentially learning to speak a new language. But in some ways it&amp;rsquo;s even more difficult, because your interlocutor is a computer who isn&amp;rsquo;t always great at telling you when you said something that made no sense.&lt;/p>
&lt;p>Regardless of your prior experience, if you are patient, you will come to appreciate the power of R for data analysis and data visualization.&lt;/p>
&lt;h2 id="r-and-the-r-console">R, and the R console&lt;/h2>
&lt;p>You can think of R analogously to the engine in a car: it will power our work. One way to control that engine is to use the &lt;em>R console&lt;/em> to execute commands as you type them, or to run scripts you have already written. There are several ways to gain access to the R console. One way is to install R on your computer and open the built-in console, which looks like this:&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://aem2850.toddgerarden.com/example/images/01/Rconsole.png" alt="Rconsole" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p>However, most people don&amp;rsquo;t use this console. Instead, they use an &lt;em>integrated development environment&lt;/em> (or IDE) to write, debug, and execute their code.&lt;/p>
&lt;h2 id="rstudio">RStudio&lt;/h2>
&lt;p>The IDE we will use in this class is RStudio. RStudio includes an editor with many R-specific features, a console to execute your code, and other useful panes, including one to show figures or view html documents you produce. RStudio looks like this:&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://aem2850.toddgerarden.com/example/images/01/rstudio.png" alt="rstudio" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p>RStudio will be our launching pad for data science projects. You can think of it as the dashboard in your car. It not only provides an editor for us to create and edit our scripts but also provides many other useful tools. In this section, we go over some of the basics.&lt;/p>
&lt;h3 id="rstudio-panes">RStudio panes&lt;/h3>
&lt;p>When you start RStudio for the first time, you will see three panes by default. The left pane shows the R console. On the right, the top pane includes tabs such as &lt;em>Environment&lt;/em> and &lt;em>History&lt;/em>, while the bottom pane shows six tabs: &lt;em>File&lt;/em>, &lt;em>Plots&lt;/em>, &lt;em>Packages&lt;/em>, &lt;em>Help&lt;/em>, &lt;em>Viewer&lt;/em>, and &lt;em>Presentation&lt;/em> (these tabs may change in new versions). You can click on each tab to move across the different features.&lt;/p>
&lt;p>To start a new R script, you can click on File, then New File, then R Script.&lt;/p>
&lt;p>This starts a new pane on the left and it is here where you can start writing your script.&lt;/p>
&lt;h3 id="keyboard-shortcuts">Keyboard shortcuts&lt;/h3>
&lt;p>Many tasks we perform with the mouse can be achieved with a combination of key strokes instead, or keyboard shortcuts For example, we just showed how to use the mouse to start a new script, but you can also use a shortcut: Ctrl+⇧+N on Windows and ⌘+⇧+N on macs.&lt;/p>
&lt;p>Although using the mouse to explore RStudio&amp;rsquo;s dropdown menus is a good place to start, &lt;strong>I highly recommend that you memorize key bindings for the operations you use most&lt;/strong>. RStudio provides a useful cheat sheet with the most widely used commands. If you&amp;rsquo;re on a mac, you can access a list of keyboard by pressing ⌥+⇧+K. You might want to keep this in mind so you can look up keyboard shortcuts when you find yourself doing the same point-and-click operations repeatedly.&lt;/p>
&lt;h3 id="tab-completion">Tab completion&lt;/h3>
&lt;p>One advantage of using RStudio is that it has context-aware tab completion. This means that when you start typing the name of a package, function, or object you want to use, RStudio will automatically suggest ways to complete your input. You can take advantage of this by scrolling through the suggestions using up/down arrows and hitting tab to use the selected completion.&lt;/p>
&lt;p>RStudio also does handy things like adding a close parentheses when you type an open parentheses, such as if you type &lt;code>library(&lt;/code>.&lt;/p>
&lt;h3 id="running-commands-while-editing-scripts">Running commands while editing scripts&lt;/h3>
&lt;p>There are many editors specifically made for coding. These are useful because color and indentation are automatically added to make code more readable. RStudio is one of these editors, and it was specifically developed for R. One of the main advantages provided by RStudio over other editors is that we can test our code easily as we edit our scripts.&lt;/p>
&lt;p>You can see this by opening a new script. Give the script a name. You can do this through the editor by saving the current new unnamed script. To do this, click on the save icon or use the key binding Ctrl+S on Windows and ⌘+S on the Mac.&lt;/p>
&lt;p>When you ask for the document to be saved for the first time, RStudio will prompt you for a name. A good convention is to use a descriptive name, with lower case letters, no spaces, only hyphens to separate words, and then followed by the suffix &lt;em>.R&lt;/em>. Call your script &lt;em>my-first-script.R&lt;/em>.&lt;/p>
&lt;p>Now we are ready to start editing our first script. For example, you could write:&lt;/p>
&lt;pre>&lt;code class="language-r">print(&amp;quot;welcome to RStudio&amp;quot;)
&lt;/code>&lt;/pre>
&lt;p>If you do this and hit ↩ in the editor, nothing will happen in the console.&lt;/p>
&lt;p>To &lt;em>execute&lt;/em> your new script, you can click on the &lt;em>Run&lt;/em> button on the upper right side of the editing pane or use the keyboard shortcut: Ctrl+⇧+↩ on Windows or ⌘+⇧+↩ on Mac. When you do this, the console will show the command as well as its output:&lt;/p>
&lt;pre>&lt;code>## [1] &amp;quot;welcome to RStudio&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>To run one line at a time instead of the entire script, you can use Ctrl+↩ on Windows and ⌘+↩ on Mac.&lt;/p>
&lt;h3 id="lets-explore-posit-cloud">Let&amp;rsquo;s explore Posit Cloud&lt;/h3>
&lt;p>&lt;a href="https://posit.cloud/" target="_blank" rel="noopener">Click here to access Posit Cloud&lt;/a>&lt;/p>
&lt;h2 id="quarto--r-markdown">Quarto / R Markdown&lt;/h2>
&lt;p>&lt;em>Note: Quarto is an authoring framework that extends R Markdown. If you are familiar with R Markdown it will be easy to transition to Quarto.&lt;/em>&lt;/p>
&lt;p>Quarto provides a unified authoring framework for data science that combines your code, its results, and your prose commentary. Quarto documents are fully reproducible and support dozens of output formats, like PDFs, Word files, slideshows, and more.&lt;/p>
&lt;p>Quarto files are designed to be used in three ways:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>For communicating to decision makers, who want to focus on the conclusions, not the code behind the analysis.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For collaborating with others (including future you!) who are interested in your conclusions &lt;em>and&lt;/em> how you reached them.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>As an environment in which to &lt;em>do&lt;/em> business analytics, where you can capture not only what you did, but also what you were thinking.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>All three of these are relevant for this course. Hopefully you can see how the first could be useful in business settings where you need to present a summary of ideas or findings to a decision maker.&lt;/p>
&lt;p>&lt;a href="https://quarto.org" target="_blank" rel="noopener">quarto.org&lt;/a> provides many more resources to help you as you begin to work with Quarto.&lt;/p>
&lt;p>You may also find the &lt;a href="https://rstudio.github.io/cheatsheets/quarto.pdf" target="_blank" rel="noopener">Quarto cheatsheet&lt;/a> helpful when getting started.&lt;/p>
&lt;h3 id="quarto-basics">Quarto basics&lt;/h3>
&lt;p>Quarto files contain three types of content:&lt;/p>
&lt;ol>
&lt;li>An (optional) &lt;strong>YAML header&lt;/strong> surrounded by &lt;code>---&lt;/code>s.&lt;/li>
&lt;li>&lt;strong>Chunks&lt;/strong> of R code surrounded by &lt;code>```&lt;/code>.&lt;/li>
&lt;li>Text mixed with simple text formatting like &lt;code># heading&lt;/code> and &lt;code>_italics_&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>You can edit each of these to affect the final output.&lt;/p>
&lt;p>When you are done composing your document, you can &lt;strong>render&lt;/strong> it by clicking Render or by using the keyboard shortcut ⌘+⇧+K. This will process the file through several steps to produce your output in the format you specify.&lt;/p>
&lt;h3 id="markdown-basics">Markdown basics&lt;/h3>
&lt;p>Markdown is a set of formatting conventions for plain text files that is widely used (beyond R). We will use an example file on RStudio Cloud to learn about some basic text formatting using Markdown. You can also read more about this in &lt;a href="https://r4ds.hadley.nz/quarto.html#sec-source-editor" target="_blank" rel="noopener">R for Data Science (2e)&lt;/a>.&lt;/p>
&lt;h2 id="basic-base-r-slides">Basic base R slides&lt;/h2>
&lt;p>Time permitting, in class or on your own time, you can learn about the basics of base R using slides accessible via these links (starting with &amp;ldquo;Introduction to base R&amp;rdquo;): &lt;a href="https://aem2850.toddgerarden.com/slides/01-slides.html">html&lt;/a> or &lt;a href="https://aem2850.toddgerarden.com/slides/01-slides.pdf">PDF&lt;/a>.&lt;/p></description></item></channel></rss>