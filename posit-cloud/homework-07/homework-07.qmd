---
#########################################################
# Steps to complete this homework:
#   1. Add your name to the author field of the yaml header
#   2. Fill in the code chunks and use inline code to answer the questions 
#   3. Click on "Render" directly above to render output (or Ctrl/Cmd-Shift-K)
#   4. Repeat steps 2-3 until you are satisfied with the final product
#   5. Download the resulting file homework-xx.pdf
#   6. Upload homework-xx.pdf to canvas
# Note: this file may not Render properly until it is (partially) completed
# Reminder: to get around this and work interactively, you can run code chunks on their own
# You can do this using keyboard shortcuts, icons in each chunk, or Run at the top right of this pane
#########################################################
title: "Homework - Week 7"
author: "Write your name here"
date: today
format: pdf
urlcolor: blue
---

```{r setup, include = FALSE}
library(tidyverse)
library(nycflights13)
```

# Preface

The goal of this assignment is to help you gain more familiarity with using **ggplot** to visualize amounts. In this homework we are providing a mix of questions that provide code snippets to serve as "scaffolding" as well as open-ended questions with no code snippets. As always, please come to office hours and reach out to your teaching staff if you have any questions.

## Data

We will work with `diamonds` and a couple of datasets (`flights`, `airlines`, `weather`) provided by the package **nycflights13** that we have seen in previous labs.

## For questions 1-3, we are going to work with the `diamonds` data. Here is what the data frame looks like:

``` {r echo = FALSE}
diamonds
```


<!--- Please leave the code above unchanged. Questions start from here. --->

## 1. In `diamonds`, one variable `color` takes on the values `r fct_unique(diamonds$color)`. Count the number of diamonds of each color. Use `goem_col` to plot a bar chart, with x-axis being the level of `color` of a diamond, and y-axis the number of diamonds per `color`. Fill the bars by `color`. Label the x-axis "Color", and the y-axis "Number of diamonds". Exclude the fill legend using `guides(fill = "none")`.

``` {r echo = TRUE}
diamonds |> 
  count(_____) |> # count the number of diamonds by color
  ggplot(aes(x = _____, y = _____, fill = _____)) +   
  geom_col() +
  guides(fill = "none") +
  labs(x = "_____", y = "_____")
```


{{< pagebreak >}}
## 2. Use `geom_bar` to reproduce the plot in question #1. Show the diamonds color at the y-axis, in a desending order by the number of diamonds from top to bottom.
<!-- Tip: The final reference section of the slides from class this week have some examples of geom_bar() usage.  -->

``` {r echo = TRUE}
diamonds |> # no need to manually count the number of diamonds by color this time
  ggplot(aes(y = fct_rev(fct_infreq(_____)), fill = _____)) +
  geom_bar() +
  guides(fill = "none") +
  labs(x = "_____", y = "_____")
```


{{< pagebreak >}}
## 3. Calculate the average price of diamonds by color. Use `geom_col` to compare the average prices, with the x-axis being the color of the diamonds, the y-axis being the average price, and mapping the variable `color` to the aesthetic `color` (not fill). Add labels to both axes. How is the color of the bars different from the first two questions? Why?
<!-- No tips this time! -->

``` {r echo = TRUE}

```
The bars are...


{{< pagebreak >}}
## For questions 4-8, we are going to work with the `flights` data.

## 4. In `flights`, the variable `hour` shows the scheduled departing hour of each flight. Calculate average arrival delays by hour, and plot a bar chart with hour on the x-axis and average arrival delay on the y-axis. Add labels to both axes.

``` {r echo = TRUE}
flights |>
  group_by(_____) |> # group by hour
  summarize(_____ = _____(_____)) |> # calculate the average arrival delay (by hour), removing NAs
  filter(_____) |>  # drop observations with NA average delays
  ggplot(_____(x = _____, y = _____)) +
  geom_col() +
  labs(_____ = "_____", _____ = "_____")
```


{{< pagebreak >}}
## 5. From question 4 we see that flights in early morning have negative average arrival delays. Use two different colors to fill the bars with negative delays and positve delays.
<!-- Tip: You can generate a new variable indicating whether the average arrival delay is positive or negative. Then use this variable in the fill argument in aesthetics.  -->

``` {r echo = TRUE}
flights |>
  group_by(_____) |> # group by hour
  summarize(_____ = _____(_____)) |> # calculate the average arrival delay (by hour), removing NAs
  filter(_____) |>  # drop observations with NA delays
  ggplot(aes(x = _____,
             y = _____,
             fill = _____) + # create a variable for whether the delay is negative or not
  geom_col() +
  guides(fill = "none") +
  labs(_____)
```


{{< pagebreak >}}
## 6. Calculate the number of flights by carrier. Find the top 10 carriers by number of flights. The **nycflights13** provides a data set `airlines` that contains the name of each carrier. Use `inner_join` to merge the `flights` data set with the `airlines` data set. Use `geom_point` to make a plot with x-axis showing the number of flights, y-axis the carrier's name. In the y-axis, the carriers should be arranged in a descending order by the number of flights from top to bottom. Add a label to the x-axis and omit the (superfluous) label from the y-axis.
<!-- No tips this time! -->

```{r echo = TRUE}

```


{{< pagebreak >}}
## For questions 7-8 are not specific to amounts, we'll use the **nycflights13** data set `weather` that includes weather condition variables (temperature, wind speed, precipitation, visibility, etc.) by origin-year-month-day-hour.

## 7. Use `inner_join` to merge the `flights` data with `weather` data. Assign it to a new object `flight_weather`. Calculate the average departure delays by precipitation (`precip`). Make a scatter plot of average departure delay vs precipitation (y vs x). Add axis labels. Does the correlation between precipitation and departure delay appear to be positive, negative, or zero?
<!-- No tips this time! -->

``` {r echo = TRUE, fig.dim = c(3.6,2.3)}

```
It looks like the correlation between precipitation and departure delay is...


{{< pagebreak >}}
## 8. Finally, let's look at visibility. Calculate the average departure delays by visibility. Make a similar plot to #7, with x-axis being visibility, and y-axis the average departure delay. Add labels to both axes. Does the correlation between visibility and departure delay appear to be positive, negative, or zero?
<!-- No tips this time! -->
 
``` {r echo = TRUE}

```
The correlation between departure delay and visibility is...
