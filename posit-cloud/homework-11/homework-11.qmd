---
#########################################################
# Steps to complete this homework:
#   1. Add your name to the author field of the yaml header
#   2. Fill in the code chunks and use inline code to answer the questions 
#   3. Click on "Render" directly above to render output (or Ctrl/Cmd-Shift-K)
#   4. Repeat steps 2-3 until you are satisfied with the final product
#   5. Download the resulting file homework-xx.pdf
#   6. Upload homework-xx.pdf to canvas
# Reminder: to work interactively, you can run code chunks on their own
# You can do this using keyboard shortcuts, icons in each chunk, or Run at the top right of this pane
#########################################################
title: "Homework - Week 11"
author: Write your name here
date: today
format: pdf
urlcolor: blue
---

```{r setup, include = FALSE}
library(tidyverse)
library(sf)

# omit warnings and center plots by default
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE,
               fig.align = "center",
               out.width = "75%")
```

# Preface

The goal of this assignment is to help you gain more familiarity with using **ggplot** to visualize geospatial data. As always, please come to office hours and reach out to your teaching staff if you have any questions.

## Rendering

Since the maps in this homework contain a lot of data, rendering may be slower than usual. We recommend running your code interactively (e.g., in chunks) so you can work on each problem separately without needing to render the entire document repeatedly. Then you can render the final product for submission when ready.

## Data

We will work with data on Airbnb listings from [Inside Airbnb](http://insideairbnb.com).[^insideairbnb] For this lab, we will start by using listing location data contained in `listings.csv`. Each row corresponds to a listing `id`, and variables summarize the key details for that listing. Import these data and assign them to a name.
```{r}
listings <- read_csv("listings.csv")
```


{{< pagebreak >}}
## 1. We'll start by plotting locations without formally treating them as spatial data. Use `geom_point()` to make a scatter plot of listing locations. Adjust the transparency by setting `alpha = 0.1` to make it easier to see which locations have higher and lower densities of listings. Color by borough (e.g., Bronx, Brooklyn, etc.).
```{r}

```


{{< pagebreak >}}
## 2. Use `read_sf()` to read in the shapefile `nybb_22a/nybb.shp` and assign it to `boroughs`. Then use `geom_sf()` to plot the spatial data contained in `boroughs`, and `fill` by `BoroName`.
```{r}

```


{{< pagebreak >}}
## 3. Now we'll combine the listings data with these new spatial data. Use `count()` or `summarize()` to count the number of listings in each borough. Join the resulting data frame with `boroughs`. Use `geom_sf()` to plot the boroughs as in 2, but now `fill` by the number of Airbnb listings in each borough to make a choropleth map. Add `scale_fill_viridis_c()` to alter the default fill colors.[^viridis-tidyverse]
```{r}

```


{{< pagebreak >}}
## 4. Now use the joined data to compute the number of listings per square mile, then use that to recreate your choropleth map from 3. Do the patterns look similar to or different from the map you created in 3? Do you think one is better than the other? Why or why not?
<!-- Hint: print `boroughs` and look at the type information for `geometry` to try to figure out what units `Shape_Area` is in, and/or use google to try to figure it out. -->
```{r}

```


{{< pagebreak >}}
## 5. Let's do some data work. Use `st_as_sf()` to convert the Airbnb listings in Manhattan to an `sf` data frame. Set the coordinate reference system by including the argument `crs = st_crs("WGS84")` in your call to `st_as_sf()`. Assign this new object to `listing_locations`.
```{r}

```

\vfill
## Next, create a sf data frame with one row that contains the location of Times Square. Use the same coordinate reference system ("WGS84").
<!-- Hint: start by using a search tool like google to find the coordinates for Times Square. Be sure you pay close attention to which number is latitude and which is longitude. Then see slide 39 from Tuesday's lecture if you aren't sure how to convert that to an sf data frame. -->
```{r}

```

\vfill
## Use `mutate()` and `st_distance()` to create a new variable in `listing_locations` that contains the distance between each listing and Times Square in kilometers.
<!-- Tip: it will simplify plotting if you convert the distance measure to a numeric in order to strip the units (meters). You will also need to convert from meters to kilometers. -->
```{r}

```

{{< pagebreak >}}
## Finally, start making a visualization using the `boroughs` map of Manhattan as a base map. Then plot the listings in Manhattan and `color` by the distance to Times Square. Adjust the transparency by setting `alpha = 0.1`, and add `scale_color_viridis_c()` to customize the color scheme.
```{r}

```


{{< pagebreak >}}
## 6. Read in `review_summary.csv`.[^review-data] Isolate the properties with at least 10 reviews and `review_scores_location` of at least 4. Join the `review_scores_location` variable to `listing_locations`. Make a plot similar to the one from 5 using the review data: Start making a visualization using the `boroughs` map of Manhattan as a base map. Then add the listings using `geom_sf()` and `color` by `review_scores_location`. Adjust the transparency by setting `alpha = 0.1`, and add `scale_color_viridis_c()` to customize the color scheme. Based on your knowledge of the location of Times Square from before, does proximity to Times Square seem to matter for location ratings?
<!-- Tip: when joining sf data frames and regular data frames, start with the sf data frame if you want to keep the spatial attributes. Otherwise the spatial nature of the data frame can be discarded. -->
```{r}

```


{{< pagebreak >}}
## 7. Use `lm()` to estimate a linear regression model to confirm your visual analysis of whether proximity to Times Square matters for location ratings. Use `review_scores_location` as the dependent variable and distance to Times Square as the independent variable. Print a `summary()` of the results and comment on your findings. Do you think this is a good model of location ratings?
```{r}

```













[^insideairbnb]: Inside Airbnb is a mission driven activist project with the objective to: *Provide data that quantifies the impact of short-term rentals on housing and residential communities; and also provides a platform to support advocacy for policies to protect our cities from the impacts of short-term rentals.*

[^viridis-tidyverse]: Several `viridis` scales are loaded with `tidyverse`, since they are included in the package `ggplot2`.

[^review-data]: As a reminder from a previous assignment: each row corresponds to a listing `id`, and variables summarize all the reviews for that listing. For context, [here is the reviews page](https://www.airbnb.com/rooms/2595/reviews) for the first listing in the data. In the top left corner you can see that Airbnb reviews include an overall rating (`review_scores_rating`) and several sub-ratings for specific things (e.g., cleanliness, stored in the column `review_scores_cleanliness`).
